/*
 * This source file was generated by the Gradle 'init' task
 */
package org.pesaranlab;

import java.util.Iterator;
import com.google.protobuf.Message;
import io.grpc.Channel;
import io.grpc.Grpc;
import io.grpc.InsecureChannelCredentials;
import io.grpc.ManagedChannel;
import io.grpc.Status;
import io.grpc.StatusRuntimeException;
import org.pesaranlab.thalamus_grpc.ThalamusGrpc;
import org.pesaranlab.thalamus_grpc.ThalamusGrpc.ThalamusBlockingStub;
import org.pesaranlab.thalamus_grpc.ThalamusOuterClass.ImageRequest;
import org.pesaranlab.thalamus_grpc.ThalamusOuterClass.NodeSelector;
import org.pesaranlab.thalamus_grpc.ThalamusOuterClass.AnalogRequest;
import org.pesaranlab.thalamus_grpc.ThalamusOuterClass.AnalogResponse;
import java.util.concurrent.TimeUnit;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) throws InterruptedException {
        System.out.println("ONE");
        ManagedChannel channel = Grpc.newChannelBuilder("127.0.0.1:50050", InsecureChannelCredentials.create()).build();
        System.out.println("TWO");
        try {
          ThalamusBlockingStub stub = ThalamusGrpc.newBlockingStub(channel);
          AnalogRequest request = AnalogRequest.newBuilder()
            .setNode(NodeSelector.newBuilder()
                       .setName("Node 1")
                       .build())
            .build();
          Iterator<AnalogResponse> stream = stub.analog(request);
          while(stream.hasNext()) {
            AnalogResponse image = stream.next();
            System.out.println(image);
          }
        } finally {
          channel.shutdownNow().awaitTermination(5, TimeUnit.SECONDS);
        }
    }
}
